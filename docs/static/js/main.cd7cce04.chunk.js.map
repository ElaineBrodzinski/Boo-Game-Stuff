{"version":3,"sources":["common.tsx","components/DemonImage.tsx","app.tsx","index.tsx"],"names":["sleep","seconds","Promise","resolve","setTimeout","randomChoice","values","valueArray","length","Error","Math","floor","random","print","console","log","output","document","createElement","classList","add","value","as","React","isValidElement","el","ReactDOM","render","StrictMode","appendChild","textContent","JSON","stringify","String","createTextNode","body","window","scroll","scrollHeight","Symbol","DemonImage","name","number","onClick","useState","hovered","setHovered","imageType","push","paddedNumber","padStart","fileName","join","path","toLowerCase","alt","src","draggable","onMouseEnter","onMouseLeave","className","css","objectFit","imageRendering","width","height","cursor","undefined","userSelect","App","started","ourDemon","theirDemon","this","Corruptor","nickname","Marine","fightToTheDeath","hp","maxHp","red","blue","a","attackFirst","speed","attackSecond","attackOther","Unit","attack","position","range","constructor","otherUnit","damage","app","root","querySelector","onFrame","content","requestAnimationFrame","main"],"mappings":"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","file":"static/js/main.cd7cce04.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport const sleep = (seconds: number) =>\r\n  new Promise((resolve) => setTimeout(resolve, seconds / 1000));\r\n\r\nexport const randomChoice = <Value extends unknown = unknown>(\r\n  values: Iterable<Value>,\r\n): Value => {\r\n  const valueArray = [...values];\r\n  if (valueArray.length === 0) {\r\n    throw new Error(\"can't select random value from empty array!\");\r\n  }\r\n  const index = Math.floor((valueArray.length - 1) * Math.random());\r\n  return valueArray[index];\r\n};\r\n\r\nexport const print = (...values: Array<any>) => {\r\n  console.log(...values);\r\n\r\n  const output = document.createElement(\"p\");\r\n  output.classList.add(\"printed\");\r\n\r\n  for (let value of values) {\r\n    while (typeof value?.[print.as] === \"function\") {\r\n      value = value[print.as]();\r\n    }\r\n\r\n    if (\r\n      React.isValidElement(value) ||\r\n      typeof value == \"string\" ||\r\n      typeof value == \"number\"\r\n    ) {\r\n      const el = document.createElement(\"span\");\r\n      ReactDOM.render(<React.StrictMode>{value}</React.StrictMode>, el);\r\n      output.appendChild(el);\r\n    } else {\r\n      const el = document.createElement(\"code\");\r\n      el.textContent =\r\n        typeof value === \"object\"\r\n          ? JSON.stringify(value, null, 2)\r\n          : String(value);\r\n      output.appendChild(el);\r\n    }\r\n\r\n    output.appendChild(document.createTextNode(\" \"));\r\n  }\r\n\r\n  document.body.appendChild(output);\r\n  window.scroll(0, document.body.scrollHeight);\r\n};\r\n\r\nprint.as = Symbol(\"print.as\");\r\n","import React, { useState } from \"react\";\nimport { css } from \"otion\";\n\nexport const DemonImage: React.FC<{\n  name: string;\n  number: number;\n  onClick?: () => void;\n}> = ({ name, number, onClick }) => {\n  const [hovered, setHovered] = useState(false);\n\n  const imageType = [\"front\"];\n  if (hovered && onClick) {\n    imageType.push(\"sparklie\");\n  }\n  const paddedNumber = String(number).padStart(3, \"0\");\n  const fileName = imageType.join(\"-\") + \".png\";\n  const path = `/prdm/${paddedNumber}-${name.toLowerCase()}/${fileName}`;\n\n  return (\n    <img\n      alt={`${name}, Purse Demon #${number}`}\n      src={path}\n      draggable={false}\n      onClick={onClick && (() => onClick())}\n      onMouseEnter={() => setHovered(true)}\n      onMouseLeave={() => setHovered(false)}\n      className={css({\n        objectFit: \"contain\",\n        imageRendering: \"pixelated\",\n        width: 48,\n        height: 48,\n        cursor: onClick ? \"pointer\" : undefined,\n        userSelect: onClick ? \"none\" : undefined,\n      })}\n    />\n  );\n};\n","import React from \"react\";\n\nimport { print, sleep, randomChoice } from \"./common\";\nimport { DemonImage } from \"./components/DemonImage\";\n\nlet _ = `\nTASK BINGO-BONGO-99:\n- Mark units as Air or Ground.\n- Mark attacks as Air or Ground or Both.\n- Give units multiple attacks, which may be different for air and ground.\n- Make units pick attacks based on which is more powerful.\n`;\n\nexport class App {\n  started: boolean;\n  ourDemon: Unit;\n  theirDemon: Unit;\n\n  /// Run the application.\n  async main() {\n    this.started = true;\n\n    this.ourDemon = new Corruptor();\n    this.ourDemon.nickname = \"Kerrigan\";\n\n    this.theirDemon = new Marine();\n\n    await fightToTheDeath(this.ourDemon, this.theirDemon);\n  }\n\n  /// Render the current state of the application to the page.\n  render() {\n    if (!(this.ourDemon && this.theirDemon)) {\n      return;\n    }\n\n    return (\n      <>\n        <p>\n          <DemonImage\n            name=\"Tagger\"\n            number={96}\n            onClick={() => print(\"rawr!\")}\n          />{\" \"}\n          {this.ourDemon.nickname} with {this.ourDemon.hp}/{this.ourDemon.maxHp}{\" \"}\n          HP.\n        </p>\n\n        <p>\n          <DemonImage name=\"Ursa\" number={111} /> {this.theirDemon.nickname}{\" \"}\n          with {this.theirDemon.hp}/{this.theirDemon.maxHp} HP.\n        </p>\n      </>\n    );\n  }\n}\nconst fightToTheDeath = async (red: Unit, blue: Unit) => {\n  print(\"--- WELCOME TO THE MAIN EVENT! ---\");\n  print(\"Today! Fighting to the death, for your entertainment, we have...\");\n  print(\"In the red corner:\", red);\n  print(\"In the blue corner:\", blue);\n\n  while (red.hp > 0 && blue.hp > 0) {\n    await sleep(0.25);\n\n    let attackFirst: Unit;\n    if (red.speed > blue.speed) {\n      attackFirst = red;\n    } else if (blue.speed > red.speed) {\n      attackFirst = blue;\n    } else {\n      attackFirst = randomChoice([red, blue]);\n    }\n\n    let attackSecond: Unit;\n    if (attackFirst === red) {\n      attackSecond = blue;\n    } else {\n      attackSecond = red;\n    }\n\n    attackFirst.attackOther(attackSecond);\n\n    if (red.hp <= 0 || blue.hp <= 0) {\n      break;\n    }\n\n    attackSecond.attackOther(attackFirst);\n  }\n\n  print();\n  print(\"--- THE JUDGE'S SCORECARDS ---\");\n  print(\"red:\", red);\n  print(\"blue:\", blue);\n};\n\nabstract class Unit {\n  hp: number;\n  maxHp: number;\n  attack: number;\n  speed: number;\n  nickname: string;\n  position: string;\n  range: string;\n\n  constructor() {\n    this.nickname = this.constructor.name;\n  }\n\n  [print.as]() {\n    return `<${this.nickname} ${this.hp}/${this.maxHp} HP, ${this.attack} attack>`;\n  }\n\n  /// Have this unit perform an attack, reducing the HP of another unit.\n  attackOther(otherUnit: Unit) {\n    print(this, \"is attacking\", otherUnit);\n\n    let damage: number;\n    if (this.range === \"air\" && otherUnit.position === \"air\") {\n      damage = 0;\n    } else if (this.range === \"ground\" && otherUnit.position !== \"ground\") {\n      damage = 0;\n    } else {\n      damage = this.attack;\n    }\n\n    if (damage > 0) {\n      if (Math.random() < 0.05) {\n        print(\"It's a critical hit!\");\n        damage = damage * 2;\n      }\n\n      otherUnit.hp -= damage;\n      if (otherUnit.hp <= 0) {\n        otherUnit.hp = 0;\n        print(otherUnit, \"has been killed by\", this);\n      }\n    }\n  }\n}\n\nclass Battlecruiser extends Unit {\n  constructor() {\n    super();\n\n    this.maxHp = 1000;\n    this.hp = this.maxHp;\n    this.attack = 40;\n    this.range = \"universal\";\n    this.speed = 1;\n    this.position = \"air\";\n  }\n}\n\nclass Baneling extends Unit {\n  constructor() {\n    super();\n\n    this.maxHp = 10000;\n    this.hp = this.maxHp;\n    this.attack = 40;\n    this.range = \"ground\";\n    this.speed = 400;\n    this.position = \"ground\";\n  }\n}\n\nclass Marine extends Unit {\n  constructor() {\n    super();\n\n    this.maxHp = 40;\n    this.hp = this.maxHp;\n    this.attack = 8;\n    this.range = \"universal\";\n    this.speed = 100;\n    this.position = \"ground\";\n  }\n}\n\nclass Corruptor extends Unit {\n  constructor() {\n    super();\n\n    this.maxHp = 150;\n    this.hp = this.maxHp;\n    this.attack = 30;\n    this.range = \"air\";\n    this.speed = 50;\n    this.position = \"air\";\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./app\";\n\nsetTimeout(async () => {\n  const app = new App();\n  const root = document.querySelector(\"main\");\n  const onFrame = () => {\n    const content = app.render();\n    ReactDOM.render(<React.StrictMode>{content}</React.StrictMode>, root);\n    requestAnimationFrame(onFrame);\n  };\n  onFrame();\n  await app.main();\n});\n"],"sourceRoot":""}