{"version":3,"sources":["common.tsx","app.tsx","index.tsx"],"names":["sleep","seconds","Promise","resolve","setTimeout","randomChoice","values","valueArray","length","Error","Math","floor","random","print","console","log","output","document","createElement","classList","add","value","as","React","isValidElement","el","ReactDOM","render","StrictMode","appendChild","textContent","JSON","stringify","String","createTextNode","body","window","scroll","scrollHeight","Symbol","App","kerrigan","Corruptor","nickname","someTerran","Marine","fightToTheDeath","className","css","height","src","alt","red","blue","a","hp","attackFirst","speed","attackSecond","attackOther","Unit","maxHp","attack","position","range","this","constructor","name","otherUnit","damage","app","root","querySelector","onFrame","content","requestAnimationFrame","main"],"mappings":"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","file":"static/js/main.b83113c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport const sleep = (seconds: number) =>\r\n  new Promise((resolve) => setTimeout(resolve, seconds / 1000));\r\n\r\nexport const randomChoice = <Value extends unknown = unknown>(\r\n  values: Iterable<Value>,\r\n): Value => {\r\n  const valueArray = [...values];\r\n  if (valueArray.length === 0) {\r\n    throw new Error(\"can't select random value from empty array!\");\r\n  }\r\n  const index = Math.floor((valueArray.length - 1) * Math.random());\r\n  return valueArray[index];\r\n};\r\n\r\nexport const print = (...values: Array<any>) => {\r\n  console.log(...values);\r\n\r\n  const output = document.createElement(\"p\");\r\n  output.classList.add(\"printed\");\r\n\r\n  for (let value of values) {\r\n    while (typeof value?.[print.as] === \"function\") {\r\n      value = value[print.as]();\r\n    }\r\n\r\n    if (\r\n      React.isValidElement(value) ||\r\n      typeof value == \"string\" ||\r\n      typeof value == \"number\"\r\n    ) {\r\n      const el = document.createElement(\"span\");\r\n      ReactDOM.render(<React.StrictMode>{value}</React.StrictMode>, el);\r\n      output.appendChild(el);\r\n    } else {\r\n      const el = document.createElement(\"code\");\r\n      el.textContent =\r\n        typeof value === \"object\"\r\n          ? JSON.stringify(value, null, 2)\r\n          : String(value);\r\n      output.appendChild(el);\r\n    }\r\n\r\n    output.appendChild(document.createTextNode(\" \"));\r\n  }\r\n\r\n  document.body.appendChild(output);\r\n  window.scroll(0, document.body.scrollHeight);\r\n};\r\n\r\nprint.as = Symbol(\"print.as\");\r\n","import React from \"react\";\r\nimport { css } from \"otion\";\r\n\r\nimport { print, sleep, randomChoice } from \"./common\";\r\n\r\nlet _ = `\r\nTASK BINGO-BONGO-99:\r\n- Mark units as Air or Ground.\r\n- Mark attacks as Air or Ground or Both.\r\n- Give units multiple attacks, which may be different for air and ground.\r\n- Make units pick attacks based on which is more powerful.\r\n`;\r\n\r\nexport class App {\r\n  /// Run the application.\r\n  async main() {\r\n    const kerrigan = new Corruptor();\r\n    kerrigan.nickname = \"Kerrigan\";\r\n\r\n    const someTerran = new Marine();\r\n\r\n    await fightToTheDeath(kerrigan, someTerran);\r\n  }\r\n\r\n  /// Render the current state of the application to the page.\r\n  render() {\r\n    return (\r\n      <>\r\n        <p>\r\n          <img\r\n            className={css({ height: 64 })}\r\n            src=\"/prdm/096-tagger/front.png\"\r\n            alt=\"Tagger, Purse Demon #96\"\r\n          />{\" \"}\r\n          Tagger with 10/10 HP.\r\n        </p>\r\n\r\n        <p>\r\n          <img\r\n            className={css({ height: 64 })}\r\n            src=\"/prdm/111-ursa/front.png\"\r\n            alt=\"Ursa, Purse Demon #111\"\r\n          />{\" \"}\r\n          Ursa with 11/11 HP.\r\n        </p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst fightToTheDeath = async (red: Unit, blue: Unit) => {\r\n  print(\"--- WELCOME TO THE MAIN EVENT! ---\");\r\n  print(\"Today! Fighting to the death, for your entertainment, we have...\");\r\n  print(\"In the red corner:\", red);\r\n  print(\"In the blue corner:\", blue);\r\n\r\n  while (red.hp > 0 && blue.hp > 0) {\r\n    await sleep(0.25);\r\n\r\n    let attackFirst: Unit;\r\n    if (red.speed > blue.speed) {\r\n      attackFirst = red;\r\n    } else if (blue.speed > red.speed) {\r\n      attackFirst = blue;\r\n    } else {\r\n      attackFirst = randomChoice([red, blue]);\r\n    }\r\n\r\n    let attackSecond: Unit;\r\n    if (attackFirst === red) {\r\n      attackSecond = blue;\r\n    } else {\r\n      attackSecond = red;\r\n    }\r\n\r\n    attackFirst.attackOther(attackSecond);\r\n\r\n    if (red.hp <= 0 || blue.hp <= 0) {\r\n      break;\r\n    }\r\n\r\n    attackSecond.attackOther(attackFirst);\r\n  }\r\n\r\n  print();\r\n  print(\"--- THE JUDGE'S SCORECARDS ---\");\r\n  print(\"red:\", red);\r\n  print(\"blue:\", blue);\r\n};\r\n\r\nabstract class Unit {\r\n  hp: number;\r\n  maxHp: number;\r\n  attack: number;\r\n  speed: number;\r\n  nickname: string;\r\n  position: string;\r\n  range: string;\r\n\r\n  constructor() {\r\n    this.nickname = this.constructor.name;\r\n  }\r\n\r\n  [print.as]() {\r\n    return `<${this.nickname} ${this.hp}/${this.maxHp} HP, ${this.attack} attack>`;\r\n  }\r\n\r\n  /// Have this unit perform an attack, reducing the HP of another unit.\r\n  attackOther(otherUnit: Unit) {\r\n    print(this, \"is attacking\", otherUnit);\r\n\r\n    let damage: number;\r\n    if (this.range === \"air\" && otherUnit.position === \"air\") {\r\n      damage = 0;\r\n    } else if (this.range === \"ground\" && otherUnit.position !== \"ground\") {\r\n      damage = 0;\r\n    } else {\r\n      damage = this.attack;\r\n    }\r\n\r\n    if (damage > 0) {\r\n      if (Math.random() < 0.05) {\r\n        print(\"It's a critical hit!\");\r\n        damage = damage * 2;\r\n      }\r\n\r\n      otherUnit.hp -= damage;\r\n      if (otherUnit.hp <= 0) {\r\n        otherUnit.hp = 0;\r\n        print(otherUnit, \"has been killed by\", this);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nclass Battlecruiser extends Unit {\r\n  constructor() {\r\n    super();\r\n\r\n    this.maxHp = 1000;\r\n    this.hp = this.maxHp;\r\n    this.attack = 40;\r\n    this.range = \"universal\";\r\n    this.speed = 1;\r\n    this.position = \"air\";\r\n  }\r\n}\r\n\r\nclass Baneling extends Unit {\r\n  constructor() {\r\n    super();\r\n\r\n    this.maxHp = 10000;\r\n    this.hp = this.maxHp;\r\n    this.attack = 40;\r\n    this.range = \"ground\";\r\n    this.speed = 400;\r\n    this.position = \"ground\";\r\n  }\r\n}\r\n\r\nclass Marine extends Unit {\r\n  constructor() {\r\n    super();\r\n\r\n    this.maxHp = 40;\r\n    this.hp = this.maxHp;\r\n    this.attack = 8;\r\n    this.range = \"universal\";\r\n    this.speed = 100;\r\n    this.position = \"ground\";\r\n  }\r\n}\r\n\r\nclass Corruptor extends Unit {\r\n  constructor() {\r\n    super();\r\n\r\n    this.maxHp = 150;\r\n    this.hp = this.maxHp;\r\n    this.attack = 30;\r\n    this.range = \"air\";\r\n    this.speed = 50;\r\n    this.position = \"air\";\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./app\";\n\nsetTimeout(async () => {\n  const app = new App();\n  const root = document.querySelector(\"main\");\n  const onFrame = () => {\n    const content = app.render();\n    ReactDOM.render(<React.StrictMode>{content}</React.StrictMode>, root);\n    requestAnimationFrame(onFrame);\n  };\n  onFrame();\n  await app.main();\n});\n"],"sourceRoot":""}